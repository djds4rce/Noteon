#!/usr/bin/env python3
#A simple python script for taking notes from the command line.
#Released Under GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007
import sys
import sqlite3
import datetime
now=datetime.datetime.now()
connec=sqlite3.connect('noteon.db')
c=connec.cursor()
#this function can be called either with no arguments or one argument which is the name of the note.
#the function checks to see if note with the name exists,else creates a new note.
def add_notes(name=None):
	if name==None:
		name=input("enter the name of the note to add:")
	t=(name,)
	c.execute("select * from note where name=?",t)
	if c.fetchone()!=None:
		print("A note with that name already exists,please enter another name")
	else:
		content=input("enter the note contents:")
		time=now.strftime("%Y-%M-%D %H:%M")
		for t in[(name,content,time)]:
			c.execute("insert into note values(?,?,?)",t)
		connec.commit()
#lists all the notes which is stored the database
def list_notes():
	c.execute("select name,time from note")
	row=c.fetchone()
	if row!=None:
		c.execute('select name,time from note')
		for row in c:
			print("{0} created on {1}".format(row[0],row[1]))
	else:
		print("no notes to display")
#This function can be called either with no arguments or one argument which is the name of the note to view.
#The function checks to see if note exists,if it does displays it
def view_notes(name=None):
	if name==None:
		name=input("enter the name of the note to view:")
	t=(name,)
	c.execute("select * from note where name=?",t)
	if c.fetchone()!=None:
		c.execute("select content from note where name=?",t)
		for row in c:
			print(format(row[0]))
	else:
		print("no note exists by that name please try again")	
#This function can be called either with no arguments or one argument which is the name of the note to delete.
#The function checks to see if the note exiss,if it does deletes it.
def delete_notes(name=None):
	if name==None:
		name=input("enter the name of the note to delete")
	t=(name,)
	c.execute("select * from note where name=?",t)
	if c.fetchone()!=None:
		c.execute("delete from note where name=?",t)
		connec.commit()
	else:
		print("A note by that name does not exist please try again")
#the help is stored in a external file this function prints it to the screen.
def print_help():
	f=open("help.txt")
	while True:
		line=f.readline()
		if len(line)==0:
			break
		print(line,end='')
	f.close()	
if(len(sys.argv)<2):
	print("welcome to noteon a simple tool for taking notes \nUsage:noteon <argv> \nType,noteon help. for a list of arguments")
elif(len(sys.argv)==2):
	if(sys.argv[1]=="add"):
		add_notes()		
	elif(sys.argv[1]=="list"):
		list_notes()
	elif(sys.argv[1]=="view"):
		view_notes()	
	elif(sys.argv[1]=="delete"):
		delete_notes()
	elif(sys.argv[1]=="help"):
		print_help()
	else:
		print("wrong option typed\n Usage:noteon <argv> \nType,noteon help.for a list of arguments")
elif(len(sys.argv)==3):
	if(sys.argv[1]=="add"):
		add_notes(sys.argv[2])
	elif(sys.argv[1]=="view"):
		view_notes(sys.argv[2])
	elif(sys.argv[1]=="delete"):
		delete_notes(sys.argv[2])
	else:
		print("wrong usage\nType,noteon help. for a list of arguments")
else:
	print("wrong usage\nUsage:noteon <argv>\nType,noteon.py help.for a list of arguments")

